<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://kamaluddinnurdin.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://kamaluddinnurdin.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-02-28T04:45:31+00:00</updated><id>https://kamaluddinnurdin.github.io/feed.xml</id><title type="html">Kamaluddin Nurdin Marjuni</title><subtitle>As an Invited Speaker International Seminar, Marmara University, Türkiye, 02032018 </subtitle><entry><title type="html">23rd ANNUAL INTERNATIONAL CONFERENCE (AICIS)</title><link href="https://kamaluddinnurdin.github.io/blog/2024/AICIS23/" rel="alternate" type="text/html" title="23rd ANNUAL INTERNATIONAL CONFERENCE (AICIS)"/><published>2024-01-03T00:00:00+00:00</published><updated>2024-01-03T00:00:00+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2024/AICIS23</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2024/AICIS23/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/01-480.webp 480w,/assets/img/posts/01_AICIS23/01-800.webp 800w,/assets/img/posts/01_AICIS23/01-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/01.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/02-480.webp 480w,/assets/img/posts/01_AICIS23/02-800.webp 800w,/assets/img/posts/01_AICIS23/02-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/02.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/03-480.webp 480w,/assets/img/posts/01_AICIS23/03-800.webp 800w,/assets/img/posts/01_AICIS23/03-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/03.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/04-480.webp 480w,/assets/img/posts/01_AICIS23/04-800.webp 800w,/assets/img/posts/01_AICIS23/04-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/04.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/05-480.webp 480w,/assets/img/posts/01_AICIS23/05-800.webp 800w,/assets/img/posts/01_AICIS23/05-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/05.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/06-480.webp 480w,/assets/img/posts/01_AICIS23/06-800.webp 800w,/assets/img/posts/01_AICIS23/06-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/06.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/07-480.webp 480w,/assets/img/posts/01_AICIS23/07-800.webp 800w,/assets/img/posts/01_AICIS23/07-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/07.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/08-480.webp 480w,/assets/img/posts/01_AICIS23/08-800.webp 800w,/assets/img/posts/01_AICIS23/08-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/08.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/09-480.webp 480w,/assets/img/posts/01_AICIS23/09-800.webp 800w,/assets/img/posts/01_AICIS23/09-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/09.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/10-480.webp 480w,/assets/img/posts/01_AICIS23/10-800.webp 800w,/assets/img/posts/01_AICIS23/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/11-480.webp 480w,/assets/img/posts/01_AICIS23/11-800.webp 800w,/assets/img/posts/01_AICIS23/11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/11.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/01_AICIS23/12-480.webp 480w,/assets/img/posts/01_AICIS23/12-800.webp 800w,/assets/img/posts/01_AICIS23/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/posts/01_AICIS23/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="conference"/><category term="conference"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://kamaluddinnurdin.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">a distill-style blog post</title><link href="https://kamaluddinnurdin.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2021/distill</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2021/distill/"><![CDATA[## Equations This theme supports rendering beautiful math in inline and display modes using [MathJax 3](https://www.mathjax.org/) engine. You just need to surround your math expression with `$$`, like `$$ E = mc^2 $$`. If you leave it inside a paragraph, it will produce an inline expression, just like $$ E = mc^2 $$. To use display mode, again surround your expression with `$$` and place it as a separate paragraph. Here is an example: $$ \left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right) $$ Note that MathJax 3 is [a major re-write of MathJax](https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html) that brought a significant improvement to the loading and rendering speed, which is now [on par with KaTeX](http://www.intmath.com/cg5/katex-mathjax-comparison.php). --- ## Citations Citations are then used in the article body with the `<d-cite>` tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas. The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it. Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work. --- ## Footnotes Just wrap the text you would like to show up in a footnote in a `<d-footnote>` tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote> --- ## Code Blocks Syntax highlighting is provided within `<d-code>` tags. An example of inline code snippets: `<d-code language="html">let x = 10;</d-code>`. For larger blocks of code, add a `block` attribute: <d-code block language="javascript"> var x = 25; function(x) { return x * x; } </d-code> **Note:** `<d-code>` blocks do not look good in the dark mode. You can always use the default code-highlight using the `highlight` liquid tag: <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
<span class="k">return</span> <span class="nx">x</span> <span class="err">\</span><span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> --- ## Interactive Plots You can add interative plots using plotly + iframes :framed_picture: <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder='0' scrolling='no' height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet: <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
<span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
<span class="n">df</span><span class="p">,</span>
<span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
<span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
<span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
<span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> --- ## Details boxes Details boxes are collapsible boxes which hide additional information from the user. They can be added with the `details` liquid tag: <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> --- ## Layouts The main text column is referred to as the body. It is the assumed layout of any direct descendants of the `d-article` element. <div class="fake-img l-body"> <p>.l-body</p> </div> For images you want to display a little larger, try `.l-page`: <div class="fake-img l-page"> <p>.l-page</p> </div> All of these have an outset variant if you want to poke out from the body text a little bit. For instance: <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> Occasionally you’ll want to use the full browser width. For this, use `.l-screen`. You can also inset the element a little from the edge of the browser by using the inset variant. <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of `.l-body` sized text except on mobile screen sizes. <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> --- ## Other Typography? Emphasis, aka italics, with _asterisks_ (`*asterisks*`) or _underscores_ (`_underscores_`). Strong emphasis, aka bold, with **asterisks** or **underscores**. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ 1. First ordered list item 2. Another item ⋅⋅\* Unordered sub-list. 3. Actual numbers don't matter, just that it's a number ⋅⋅1. Ordered sub-list 4. And another item. ⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). ⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) - Unordered list can use asterisks * Or minuses - Or pluses [I'm an inline-style link](https://www.google.com) [I'm an inline-style link with title](https://www.google.com "Google's Homepage") [I'm a reference-style link][Arbitrary case-insensitive reference text] [You can use numbers for reference-style link definitions][1] Or leave it empty and use the [link text itself]. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <http://www.example.com> and sometimes example.com (but not on Github, for example). Some text to show that the reference links can follow later. [arbitrary case-insensitive reference text]: https://www.mozilla.org [1]: http://slashdot.org [link text itself]: http://www.reddit.com Here's our logo (hover to see the title text): Inline-style: ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png "Logo Title Text 1") Reference-style: ![alt text][logo] [logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png "Logo Title Text 2" Inline `code` has `back-ticks around` it. ```javascript var s = "JavaScript syntax highlighting"; alert(s); ``` ```python s = "Python syntax highlighting" print s ``` ``` No language indicated, so no syntax highlighting. But let's throw in a <b>tag</b>. ``` Colons can be used to align columns. | Tables | Are | Cool | | ------------- | :-----------: | ----: | | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. | Markdown | Less | Pretty | | -------- | --------- | ---------- | | _Still_ | `renders` | **nicely** | | 1 | 2 | 3 | > Blockquotes are very handy in email to emulate reply text. > This line is part of the same quote. Quote break. > This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can _put_ **Markdown** into a blockquote. Here's a line for us to start with. This line is separated from the one above by two newlines, so it will be a _separate paragraph_. This line is also a separate paragraph, but... This line is only separated by a single newline, so it's a separate line in the _same paragraph_.]]></content><author><name>Albert Einstein</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://kamaluddinnurdin.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata"/><published>2020-09-28T21:01:00+00:00</published><updated>2020-09-28T21:01:00+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2020/github-metadata/"><![CDATA[A sample blog page that demonstrates the accessing of github meta data. ## What does Github-MetaData do? - Propagates the site.github namespace with repository metadata - Setting site variables : - site.title - site.description - site.url - site.baseurl - Accessing the metadata - duh. - Generating edittable links. ## Additional Reading - If you're recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>. - Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic. - <a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata. <br/> ## Example MetaData - Host Name : - URL : - BaseURL : - Archived : - Contributors :]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="metadata"/><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with disqus comments</title><link href="https://kamaluddinnurdin.github.io/blog/2015/disqus-comments/" rel="alternate" type="text/html" title="a post with disqus comments"/><published>2015-10-20T15:59:00+00:00</published><updated>2015-10-20T15:59:00+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2015/disqus-comments</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2015/disqus-comments/"><![CDATA[This post shows how to add DISQUS comments.]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="comments"/><summary type="html"><![CDATA[an example of a blog post with disqus comments]]></summary></entry><entry><title type="html">a post with math</title><link href="https://kamaluddinnurdin.github.io/blog/2015/math/" rel="alternate" type="text/html" title="a post with math"/><published>2015-10-20T15:12:00+00:00</published><updated>2015-10-20T15:12:00+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2015/math</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2015/math/"><![CDATA[This theme supports rendering beautiful math in inline and display modes using [MathJax 3](https://www.mathjax.org/) engine. You just need to surround your math expression with `$$`, like `$$ E=mc^2 $$`. If you leave it inside a paragraph, it will produce an inline expression, just like $$ E=mc^2 $$. To use display mode, again surround your expression with `$$` and place it as a separate paragraph. Here is an example: $$ \sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2 $$ You can also use `\begin{equation}...\end{equation}` instead of `$$` for display mode math. MathJax will automatically number equations: \begin{equation} \label{eq:cauchy-schwarz} \left( \sum*{k=1}^n a_k b_k \right)^2 \leq \left( \sum*{k=1}^n a*k^2 \right) \left( \sum*{k=1}^n b_k^2 \right) \end{equation} and by adding `\label{...}` inside the equation environment, we can now refer to the equation using `\eqref`. Note that MathJax 3 is [a major re-write of MathJax](https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html) that brought a significant improvement to the loading and rendering speed, which is now [on par with KaTeX](http://www.intmath.com/cg5/katex-mathjax-comparison.php).]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="math"/><summary type="html"><![CDATA[an example of a blog post with some math]]></summary></entry><entry><title type="html">a post with code</title><link href="https://kamaluddinnurdin.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code"/><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://kamaluddinnurdin.github.io/blog/2015/code</id><content type="html" xml:base="https://kamaluddinnurdin.github.io/blog/2015/code/"><![CDATA[This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in markdown code tags: ````markdown ```c++ code code code ``` ```` ```c++ int main(int argc, char const \*argv[]) { string myString; cout << "input a string: "; getline(cin, myString); int length = myString.length(); char charArray = new char * [length]; charArray = myString; for(int i = 0; i < length; ++i){ cout << charArray[i] << " "; } return 0; } ``` For displaying code in a list item, you have to be aware of the indentation, as stated in this [Stackoverflow answer](https://stackoverflow.com/questions/34987908/embed-a-code-block-in-a-list-item-with-proper-indentation-in-kramdown/38090598#38090598). You must indent your code by **(3 \* bullet_indent_level)** spaces. This is because kramdown (the markdown engine used by Jekyll) indentation for the code block in lists is determined by the column number of the first non-space character after the list item marker. For example: ````markdown 1. We can put fenced code blocks inside nested bullets, too. 1. Like this: ```c printf("Hello, World!"); ``` 2. The key is to indent your fenced block in the same line as the first character of the line. ```` Which displays: 1. We can put fenced code blocks inside nested bullets, too. 1. Like this: ```c printf("Hello, World!"); ``` 2. The key is to indent your fenced block in the same line as the first character of the line. By default, it does not display line numbers. If you want to display line numbers for every code block, you can set `kramdown.syntax_highlighter_opts.block.line_numbers` to true in your `_config.yml` file. If you want to display line numbers for a specific code block, all you have to do is wrap your code in a liquid tag: {% highlight c++ linenos %} <br/> code code code <br/> {% endhighlight %} The keyword `linenos` triggers display of line numbers. Produces something like this: <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
<span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry></feed>